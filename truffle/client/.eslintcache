[{"C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\PoolPercent.js":"1","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\Allowance.js":"2","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\Balance.js":"3","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\PreSale.js":"4","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\SoftStake.js":"5","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\PreSaleModal.js":"6","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\index.js":"7","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\RemoveStakeModal.js":"8","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\SmartContracts.js":"9","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\GetStake.js":"10","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\PresaleInfo.js":"11","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\WithdrawStake.js":"12","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\Approve.js":"13","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\App.js":"14","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\ReadOwner.js":"15","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\StakingModal.js":"16","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\PendingRewards.js":"17","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\RemoveStake.js":"18","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\ReadString.js":"19","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\ForceRewardUpdate.js":"20"},{"size":1611,"mtime":1610095295449,"results":"21","hashOfConfig":"22"},{"size":1419,"mtime":1610093443161,"results":"23","hashOfConfig":"22"},{"size":2254,"mtime":1610098997595,"results":"24","hashOfConfig":"22"},{"size":1955,"mtime":1610012835539,"results":"25","hashOfConfig":"22"},{"size":2813,"mtime":1610093482096,"results":"26","hashOfConfig":"22"},{"size":4206,"mtime":1610097732533,"results":"27","hashOfConfig":"22"},{"size":1040,"mtime":1610012458746,"results":"28","hashOfConfig":"22"},{"size":2795,"mtime":1610099811898,"results":"29","hashOfConfig":"22"},{"size":2952,"mtime":1610012458693,"results":"30","hashOfConfig":"22"},{"size":1266,"mtime":1610095360515,"results":"31","hashOfConfig":"22"},{"size":1798,"mtime":1610026449033,"results":"32","hashOfConfig":"22"},{"size":1532,"mtime":1610100603327,"results":"33","hashOfConfig":"22"},{"size":3261,"mtime":1610087577567,"results":"34","hashOfConfig":"22"},{"size":10260,"mtime":1610099811926,"results":"35","hashOfConfig":"22"},{"size":7062,"mtime":1610093192299,"results":"36","hashOfConfig":"22"},{"size":3627,"mtime":1610098036615,"results":"37","hashOfConfig":"22"},{"size":1324,"mtime":1610093439907,"results":"38","hashOfConfig":"22"},{"size":2715,"mtime":1610100230007,"results":"39","hashOfConfig":"22"},{"size":946,"mtime":1609996255226,"results":"40","hashOfConfig":"22"},{"size":1855,"mtime":1609996255195,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"bpyoih",{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"45"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\PoolPercent.js",["93","94"],"import React from \"react\";\r\n/* global BigInt */\r\n\r\nclass PoolPercent extends React.Component {\r\n\r\n    update() {\r\n        const { drizzle } = this.props;\r\n        let stakingAddress = drizzle.contracts.SoftStaking.address\r\n        let wxeq = drizzle.contracts.wXEQ\r\n        let dataKey = this.props.drizzle.contracts.SoftStaking.methods[\"getPendingReward\"].cacheCall(drizzle.store.getState().accounts[0]);\r\n        dataKey = this.props.drizzle.contracts.SoftStaking.methods[\"totalStaked\"].cacheCall();\r\n        let dataKeyStaking = this.props.drizzle.contracts.SoftStaking.methods[\"userInfo\"].cacheCall(drizzle.store.getState().accounts[0]);\r\n\r\n\r\n        this.setState({stakingAddress: stakingAddress, dataKey: dataKey, dataKeyStaking : dataKeyStaking })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.update()\r\n    }\r\n\r\n    render() {\r\n        let approvedCoins = 0\r\n        let staked = 0;\r\n        try {\r\n           staked = this.props.drizzleState.contracts.SoftStaking[\"userInfo\"][this.state.dataKeyStaking].value.amount\r\n           approvedCoins = staked/this.props.drizzleState.contracts.SoftStaking[\"totalStaked\"][this.state.dataKey].value\r\n        } catch{}\r\n        let coins = (Number(approvedCoins))\r\n        let coinDisplay = <p id={\"bigNumber\"} >{(Number(approvedCoins)*100).toFixed(4)}%</p>\r\n        if (coins === 0)\r\n            coinDisplay = <p id={\"bigNumber\"} style={{\"color\":\"#ef101e\"}}>{(Number(approvedCoins)/(10**18)*100).toLocaleString()}%</p>\r\n        return (\r\n            <div>\r\n                {coinDisplay}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PoolPercent;",["95","96"],"C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\Allowance.js",["97","98"],"import React from \"react\";\r\n/* global BigInt */\r\n\r\nclass Allowance extends React.Component {\r\n\r\n    update() {\r\n        const { drizzle } = this.props;\r\n        let stakingAddress = drizzle.contracts.SoftStaking.address\r\n        let wxeq = drizzle.contracts.wXEQ\r\n        let dataKey = this.props.drizzle.contracts.SoftStaking.methods[\"getPendingReward\"].cacheCall(drizzle.store.getState().accounts[0]);\r\n\r\n        dataKey = this.props.drizzle.contracts.SoftStaking.methods[\"totalAmountStaked\"].cacheCall();\r\n\r\n\r\n        this.setState({stakingAddress: stakingAddress, dataKey: dataKey})\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.update()\r\n    }\r\n\r\n    render() {\r\n        let approvedCoins = 0\r\n        try {\r\n            approvedCoins = this.props.drizzleState.contracts.SoftStaking[\"getPendingReward\"][this.state.dataKey].value\r\n        } catch{}\r\n        let coins = (Number(approvedCoins)/(10**18)).toLocaleString()\r\n        let coinDisplay = <p id={\"bigNumber\"} style={{\"font-size\":\"50px\"}}>{(Number(approvedCoins)/(10**18)).toLocaleString()}</p>\r\n        if (coins === \"0\")\r\n            coinDisplay = <p id={\"bigNumber\"} style={{\"color\":\"#ef101e\", \"font-size\":\"50px\"}}>{(Number(approvedCoins)/(10**18)).toLocaleString()}</p>\r\n        return (\r\n            <div>\r\n                <h1>Pending Rewards</h1>\r\n                {coinDisplay}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Allowance;","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\Balance.js",[],"C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\PreSale.js",[],"C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\SoftStake.js",["99","100"],"import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n/* global BigInt */\r\n\r\nclass AddStake extends React.Component {\r\n    state = { stackId: null, val: 0};\r\n\r\n    handleKeyDown = e => {\r\n        // if the enter key is pressed, set the value with the string\r\n            if (e.keyCode === 13) {\r\n                this.setValue(e.target.value);\r\n            }\r\n\r\n    };\r\n\r\n    setValue = value => {\r\n        const { drizzle, drizzleState } = this.props;\r\n        const contract = drizzle.contracts.SoftStaking\r\n        if (value <= 0)\r\n            return\r\n        value = Math.round(value * (10**10))\r\n        value = BigInt(value) * BigInt(10**8)\r\n        let appCoins = 0\r\n        if (Object.keys(this.props.drizzleState.contracts.wXEQ.allowance).length > 0)\r\n            appCoins = (Number(this.props.drizzleState.contracts.wXEQ.allowance[Object.keys(this.props.drizzleState.contracts.wXEQ.allowance)[0]].value))\r\n        if (value > appCoins)\r\n            return\r\n\r\n\r\n        const instance = new drizzle.web3.eth.Contract(contract.abi, contract.address);\r\n\r\n                const stackId = contract.methods[\"enter\"].cacheSend( value,\r\n                    { from: drizzleState.accounts[0]}\r\n                );\r\n                this.setState({ stackId });\r\n      \r\n\r\n    };\r\n\r\n    getTxStatus = () => {\r\n        // get the transaction states from the drizzle state\r\n        const { transactions, transactionStack } = this.props.drizzleState;\r\n\r\n        // get the transaction hash using our saved `stackId`\r\n        const txHash = transactionStack[this.state.stackId];\r\n\r\n        // if transaction hash does not exist, don't display anything\r\n        if (!txHash) return null;\r\n\r\n        // otherwise, return the transaction status\r\n        return `Transaction status: ${transactions[txHash] && transactions[txHash].status}`;\r\n    };\r\n\r\n\r\n    render() {\r\n        let appCoins = 0\r\n        if (Object.keys(this.props.drizzleState.contracts.wXEQ.allowance).length > 0)\r\n            appCoins = (Number(this.props.drizzleState.contracts.wXEQ.allowance[Object.keys(this.props.drizzleState.contracts.wXEQ.allowance)[0]].value)/10**18).toLocaleString()\r\n        return (\r\n            <div>\r\n                <h6>Lock wXEQ and Earn Rewards<br/>(you currently have {appCoins} approved)</h6>\r\n                <input type=\"text\" onChange={(e) => {this.setState({val: e.target.value})}}  placeholder=\"Amount to Stake\" onKeyDown={this.handleKeyDown} />\r\n                <div id={\"inputBox\"}><p>{this.getTxStatus()}</p></div>\r\n                <div style={{\"padding-bottom\":\"30px\"}}>\r\n                    <button id={\"submitButton\"} onClick={ () => {this.setValue(this.state.val)}}><h3>Submit</h3></button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddStake;","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\PreSaleModal.js",["101","102","103","104","105","106"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport PreSale from \"./PreSale\";\r\nimport AddStake from \"./SoftStake\";\r\nimport ApproveCoins from \"./Approve\";\r\nimport RemoveStake from \"./RemoveStake\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WithdrawStake from \"./WithdrawStake\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\nlet copied = false\r\nexport default function PresaleModal(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const copyToClipboard = str => {\r\n        // const el = document.createElement('textarea');\r\n        // el.value = str;\r\n        // document.body.appendChild(el);\r\n        // el.select();\r\n        // document.execCommand('copy');\r\n        // document.body.removeChild(el);\r\n    };\r\n\r\n    let ethamount = 0\r\n    let wXEQ_Minted = 0\r\n    let remaining = 0\r\n\r\n    if (Object.keys(props.drizzleState.contracts.PreSale.ethMinted).length > 0)\r\n        ethamount = (Number(props.drizzleState.contracts.PreSale.ethMinted[\"0x0\"].value)/(10**18)).toLocaleString()\r\n\r\n    if (Object.keys(props.drizzleState.contracts.PreSale.wXEQminted).length > 0)\r\n        wXEQ_Minted = (Number(props.drizzleState.contracts.PreSale.wXEQminted[\"0x0\"].value)/(10**18)).toLocaleString()\r\n\r\n    if (Object.keys(props.drizzleState.contracts.PreSale.wXEQLeft).length > 0)\r\n        remaining = (Number(props.drizzleState.contracts.PreSale.wXEQLeft[\"0x0\"].value)/(10**18)).toLocaleString()\r\n    let text = props.drizzle.contracts.PreSale.address\r\n    // if (copied)\r\n    //     text = \"Copied\"\r\n    return (\r\n        <div className={\"App\"} style={{\"background\":\"transparent\", \"padding-bottom\":\"30px\"}}>\r\n            <button id={\"submitButton\"} onClick={handleOpen}><h3>Presale</h3></button>\r\n\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open} style={{\"width\":\"80%\"}}>\r\n                    <div className={\"App\"} style={{\"background\":\"transparent\", \"width\":\"80%\"}} id={\"modalPopup\"} >\r\n                        <Grid container spacing={10} id={\"modalPopup\"}\r\n                        style={{\"margin-left\": \"auto\", \"margin-right\": \"auto\"}}>\r\n                        <Grid container item xs={12} >\r\n                                <div id={\"dataContainer\"} style={{\r\n                                    \"width\": \"80%\",\r\n                                    \"margin-left\": \"auto\",\r\n                                    \"margin-right\": \"auto\",\r\n                                }}>\r\n                                    <h1>wXEQ Presale</h1>\r\n                                    <h3><button style={{\"width\":\"40%\"}} onClick={copyToClipboard(props.drizzle.contracts.PreSale.address)} id={\"submitButton\"}><p>{text}</p></button></h3>\r\n                                    <p>Send ETH to the above address and receive 1 wXEQ for every $0.15 worth of ETH sent.</p>\r\n                                    <p>Total ETH Raised: {ethamount} | Total wXEQ Minted: {wXEQ_Minted} | Remaining wXEQ for sale: {remaining}</p>\r\n                                </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n);\r\n}","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\index.js",["107","108"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\n// import drizzle functions and contract artifact\r\nimport { Drizzle, generateStore } from \"@drizzle/store\";\r\nimport Master from \"./contracts/Master.json\";\r\nimport wXEQ from \"./contracts/wXEQ.json\"\r\nimport softStaking from \"./contracts/SoftStaking.json\"\r\nimport presale from \"./contracts/PreSale.json\"\r\nimport SmartContractModal from \"./components/SmartContractModal\";\r\n\r\n// let drizzle know what contracts we want and how to access our test blockchain\r\nconst options = {\r\n    contracts: [Master, wXEQ, softStaking, presale],\r\n    web3: {\r\n        fallback: {\r\n            type: \"ws\",\r\n            url: \"ws://127.0.0.1:9545\",\r\n        },\r\n    },\r\n};\r\n\r\n// setup the drizzle store and drizzle\r\nconst drizzle = new Drizzle(options);\r\n// <SmartContractModal/>\r\nReactDOM.render(<App drizzle={drizzle} style={{\"background-color\":\"#252525\"}} />, document.getElementById('root'));","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\RemoveStakeModal.js",["109","110","111","112","113"],"C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\SmartContracts.js",[],["114","115"],"C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\GetStake.js",[],"C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\PresaleInfo.js",["116","117","118","119","120","121"],"import React from \"react\";\r\n\r\nclass PresaleInfo extends React.Component {\r\n    state = { dataKey: null, dataKeyXEQ: null, dataKeyStaking: null, dataKeySale: null, ethPrice: 0 };\r\n\r\n    update() {\r\n        const { drizzle } = this.props;\r\n        let stakingAddress = drizzle.contracts.SoftStaking.address\r\n        let wxeq = drizzle.contracts.PreSale\r\n        let dataKey = this.props.drizzle.contracts.PreSale.methods[\"wXEQLeft\"].cacheCall();\r\n        dataKey = this.props.drizzle.contracts.PreSale.methods[\"ethMinted\"].cacheCall();\r\n        dataKey = this.props.drizzle.contracts.PreSale.methods[\"wXEQminted\"].cacheCall();\r\n\r\n        this.setState({dataKey: dataKey})\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.update();\r\n    }\r\n\r\n    render() {\r\n        let wXEQLeft = 0\r\n        try {\r\n            let key = Object.keys(this.props.drizzleState.contracts.PreSale[\"wXEQLeft\"])[0]\r\n            wXEQLeft = this.props.drizzleState.contracts.PreSale[\"wXEQLeft\"][key].value\r\n        }\r\n        catch {\r\n\r\n        }\r\n        // get the contract state from drizzleState\r\n        let wXEQMinted = 0\r\n        let ethMinted = 0\r\n        let finalBlock = 0\r\n        let cap = 0\r\n\r\n        return (\r\n            <div>\r\n                <h1>Presale Info</h1>\r\n                <h2>Presale Target</h2>\r\n                <p id={\"bigNumber\"}>{(10000000).toLocaleString()}</p>\r\n                <h2>Exchange Rate</h2>\r\n                <p id={\"bigNumber\"}>$0.15</p>\r\n                <h2>wXEQ Remaining</h2>\r\n                <p id={\"bigNumber\"}>{(Number(wXEQLeft)/(10**18)).toLocaleString()}</p>\r\n                {/*<h2>Presale Expiration Block</h2>*/}\r\n                {/*<p id={\"bigNumber\"} style={{\"color\":\"#ef101e\"}}>{finalBlock}</p>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PresaleInfo;",["122","123"],"C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\WithdrawStake.js",[],"C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\Approve.js",["124","125","126","127"],"C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\App.js",["128"],"C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\ReadOwner.js",[],"C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\StakingModal.js",["129","130","131","132"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport PreSale from \"./PreSale\";\r\nimport AddStake from \"./SoftStake\";\r\nimport ApproveCoins from \"./Approve\";\r\nimport RemoveStake from \"./RemoveStake\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WithdrawStake from \"./WithdrawStake\";\r\nimport Allowance from \"./Allowance\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nexport default function TransitionsModal(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={\"App\"} style={{\"background\":\"transparent\", \"padding-bottom\":\"30px\"}}>\r\n            <button id={\"submitButton\"} onClick={handleOpen}><h3>Add Stake</h3></button>\r\n\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open} style={{\"width\":\"80%\"}}>\r\n                    <div className={\"App\"} style={{\"background\":\"transparent\", \"width\":\"60%\"}} id={\"modalPopup\"} >\r\n                        <Grid container spacing={10} id={\"modalPopup\"}\r\n                        style={{\"margin-left\": \"auto\", \"margin-right\": \"auto\"}}>\r\n                        <Grid container item xs={12} >\r\n\r\n                            <Grid container item xs={12} lg={6} >\r\n                                <div id={\"dataContainer\"}\r\n                                     style={{\"width\": \"80%\", \"margin-left\": \"auto\", \"margin-right\": \"auto\"}}>\r\n                                    <h1>Approve Tokens</h1>\r\n                                    <ApproveCoins\r\n                                        drizzle={props.drizzle}\r\n                                        drizzleState={props.drizzleState}/>\r\n                                </div>\r\n                            </Grid>\r\n\r\n                            <Grid container item xs={12} lg={6} >\r\n                                <div id={\"dataContainer\"} style={{\r\n                                    \"width\": \"80%\",\r\n                                    \"margin-left\": \"auto\",\r\n                                    \"margin-right\": \"auto\",\r\n                                    // \"margin-top\": \"20px\"\r\n                                }}>\r\n                                    <h1>Stake wXEQ</h1>\r\n                                    <AddStake\r\n                                        drizzle={props.drizzle}\r\n                                        drizzleState={props.drizzleState}/>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n);\r\n}","C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\PendingRewards.js",[],["133","134"],"C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\RemoveStake.js",["135","136"],"C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\ReadString.js",[],"C:\\Users\\harri\\OneDrive\\Documents\\EquilibriaWagers\\eth-equilibria\\truffle\\client\\src\\components\\ForceRewardUpdate.js",[],{"ruleId":"137","severity":1,"message":"138","line":2,"column":11,"nodeType":"139","messageId":"140","endLine":2,"endColumn":17},{"ruleId":"137","severity":1,"message":"141","line":9,"column":13,"nodeType":"142","messageId":"140","endLine":9,"endColumn":17},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"137","severity":1,"message":"138","line":2,"column":11,"nodeType":"139","messageId":"140","endLine":2,"endColumn":17},{"ruleId":"137","severity":1,"message":"141","line":9,"column":13,"nodeType":"142","messageId":"140","endLine":9,"endColumn":17},{"ruleId":"137","severity":1,"message":"147","line":2,"column":8,"nodeType":"142","messageId":"140","endLine":2,"endColumn":17},{"ruleId":"137","severity":1,"message":"148","line":30,"column":15,"nodeType":"142","messageId":"140","endLine":30,"endColumn":23},{"ruleId":"137","severity":1,"message":"149","line":6,"column":8,"nodeType":"142","messageId":"140","endLine":6,"endColumn":15},{"ruleId":"137","severity":1,"message":"150","line":7,"column":8,"nodeType":"142","messageId":"140","endLine":7,"endColumn":16},{"ruleId":"137","severity":1,"message":"151","line":8,"column":8,"nodeType":"142","messageId":"140","endLine":8,"endColumn":20},{"ruleId":"137","severity":1,"message":"152","line":9,"column":8,"nodeType":"142","messageId":"140","endLine":9,"endColumn":19},{"ruleId":"137","severity":1,"message":"153","line":11,"column":8,"nodeType":"142","messageId":"140","endLine":11,"endColumn":21},{"ruleId":"137","severity":1,"message":"154","line":26,"column":5,"nodeType":"142","messageId":"140","endLine":26,"endColumn":11},{"ruleId":"137","severity":1,"message":"155","line":8,"column":19,"nodeType":"142","messageId":"140","endLine":8,"endColumn":32},{"ruleId":"137","severity":1,"message":"156","line":13,"column":8,"nodeType":"142","messageId":"140","endLine":13,"endColumn":26},{"ruleId":"137","severity":1,"message":"149","line":6,"column":8,"nodeType":"142","messageId":"140","endLine":6,"endColumn":15},{"ruleId":"137","severity":1,"message":"150","line":7,"column":8,"nodeType":"142","messageId":"140","endLine":7,"endColumn":16},{"ruleId":"137","severity":1,"message":"151","line":8,"column":8,"nodeType":"142","messageId":"140","endLine":8,"endColumn":20},{"ruleId":"137","severity":1,"message":"153","line":11,"column":8,"nodeType":"142","messageId":"140","endLine":11,"endColumn":21},{"ruleId":"137","severity":1,"message":"157","line":12,"column":8,"nodeType":"142","messageId":"140","endLine":12,"endColumn":17},{"ruleId":"143","replacedBy":"158"},{"ruleId":"145","replacedBy":"159"},{"ruleId":"137","severity":1,"message":"160","line":8,"column":13,"nodeType":"142","messageId":"140","endLine":8,"endColumn":27},{"ruleId":"137","severity":1,"message":"141","line":9,"column":13,"nodeType":"142","messageId":"140","endLine":9,"endColumn":17},{"ruleId":"137","severity":1,"message":"161","line":31,"column":13,"nodeType":"142","messageId":"140","endLine":31,"endColumn":23},{"ruleId":"137","severity":1,"message":"162","line":32,"column":13,"nodeType":"142","messageId":"140","endLine":32,"endColumn":22},{"ruleId":"137","severity":1,"message":"163","line":33,"column":13,"nodeType":"142","messageId":"140","endLine":33,"endColumn":23},{"ruleId":"137","severity":1,"message":"164","line":34,"column":13,"nodeType":"142","messageId":"140","endLine":34,"endColumn":16},{"ruleId":"143","replacedBy":"165"},{"ruleId":"145","replacedBy":"166"},{"ruleId":"137","severity":1,"message":"167","line":2,"column":10,"nodeType":"142","messageId":"140","endLine":2,"endColumn":20},{"ruleId":"137","severity":1,"message":"147","line":3,"column":8,"nodeType":"142","messageId":"140","endLine":3,"endColumn":17},{"ruleId":"137","severity":1,"message":"168","line":4,"column":10,"nodeType":"142","messageId":"140","endLine":4,"endColumn":24},{"ruleId":"137","severity":1,"message":"169","line":4,"column":26,"nodeType":"142","messageId":"140","endLine":4,"endColumn":31},{"ruleId":null,"fatal":true,"severity":2,"message":"170","line":178,"column":2},{"ruleId":"137","severity":1,"message":"149","line":6,"column":8,"nodeType":"142","messageId":"140","endLine":6,"endColumn":15},{"ruleId":"137","severity":1,"message":"152","line":9,"column":8,"nodeType":"142","messageId":"140","endLine":9,"endColumn":19},{"ruleId":"137","severity":1,"message":"153","line":11,"column":8,"nodeType":"142","messageId":"140","endLine":11,"endColumn":21},{"ruleId":"137","severity":1,"message":"157","line":12,"column":8,"nodeType":"142","messageId":"140","endLine":12,"endColumn":17},{"ruleId":"143","replacedBy":"171"},{"ruleId":"145","replacedBy":"172"},{"ruleId":"137","severity":1,"message":"173","line":11,"column":15,"nodeType":"142","messageId":"140","endLine":11,"endColumn":23},{"ruleId":"137","severity":1,"message":"174","line":34,"column":13,"nodeType":"142","messageId":"140","endLine":34,"endColumn":21},"no-unused-vars","'BigInt' is defined but never used.","Program","unusedVar","'wxeq' is assigned a value but never used.","Identifier","no-native-reassign",["175"],"no-negated-in-lhs",["176"],"'TextField' is defined but never used.","'instance' is assigned a value but never used.","'PreSale' is defined but never used.","'AddStake' is defined but never used.","'ApproveCoins' is defined but never used.","'RemoveStake' is defined but never used.","'WithdrawStake' is defined but never used.","'copied' is assigned a value but never used.","'generateStore' is defined but never used.","'SmartContractModal' is defined but never used.","'Allowance' is defined but never used.",["175"],["176"],"'stakingAddress' is assigned a value but never used.","'wXEQMinted' is assigned a value but never used.","'ethMinted' is assigned a value but never used.","'finalBlock' is assigned a value but never used.","'cap' is assigned a value but never used.",["175"],["176"],"'makeStyles' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","Parsing error: Unexpected token\n\n  176 |                         <h2 id={\"headerText\"}>Wrapped Equilibria Dashboard</h2>\n  177 |                     </div>\n> 178 | <<<<<<< HEAD\n      |  ^\n  179 |                     <div id={\"body\"} style={{\"position\":\"relative\"}}>\n  180 | =======\n  181 |                     <div id={\"body\"} >",["175"],["176"],"'contract' is assigned a value but never used.","'appCoins' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]